@page "/"
@implements IAsyncDisposable
@inject IJSRuntime JS

<PageTitle>Index</PageTitle>

<InputFile OnChange="@LoadFiles" multiple/>

@code {
    private IJSObjectReference? module;
    private string? code;
    
    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        code = await new StreamReader(e.File.OpenReadStream()).ReadToEndAsync();
        Console.WriteLine(code);
        await ParsePic(code);
    }
    
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/parser.js");
        }
    }
    
    public async ValueTask<string?> ParsePic(string sourceCode)
    {
        return module is not null ?
            await module.InvokeAsync<string>("parsePic", sourceCode) : null;
    }

    public async ValueTask DisposeAsync()
    {
        // if (module is not null)
        // {
        //     await module.DisposeAsync();
        // }
    }

}



<div id="code-block"></div>