@page "/"
@using picSimu.Simulation
@* @implements IAsyncDisposable *@
@inject IJSRuntime JS

<PageTitle>Index</PageTitle>

<InputFile OnChange="@LoadFiles" multiple/>
@* <button disabled="@(InstructionCodes is null ? "true" : "false")" @onclick="RunSimulation">RUN</button> *@
<button disabled="@(InstructionCodes is null ? true : false)" @onclick="RunSimulation">RUN</button>

@code {
    private IJSObjectReference? module;
    private string? code;
    private string? parsedInstructionCodes;
    public string[]? InstructionCodes;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/parser.js");
        }
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        code = await new StreamReader(e.File.OpenReadStream()).ReadToEndAsync();
    // Console.WriteLine(code);
        await DisplayPicCode(code);
        parsedInstructionCodes = await GetInstructionCodes(code);
        Console.WriteLine("parsedInstructionCodes: " + parsedInstructionCodes);
        if (parsedInstructionCodes != null)
        {
            InstructionCodes = parsedInstructionCodes.Split(",");
            // runButtonDisabled = false;
        }
    }

    public async ValueTask<string?> DisplayPicCode(string sourceCode)
    {
        return module is not null ?
            await module.InvokeAsync<string>("parsePic", sourceCode) : null;
    }

    public async ValueTask<string?> GetInstructionCodes(string sourceCode)
    {
        return module is not null ?
            await module.InvokeAsync<string>("getInstructionCodes", sourceCode) : null;
    }

    public async Task<bool> RunSimulation()
    {
        Pic pic = new Pic();
        pic.Run(InstructionCodes);
        return false;
    }

    // public async ValueTask DisposeAsync()
    // {
    //     if (module is not null)
    //     {
    //         await module.DisposeAsync();
    //     }
    // }

}


<div id="code-block"></div>