<input type="text" maxlength="2" class="@Class" title="@Value?.ToolTip"
       value="@_textFieldString" @oninput="@OnInputChange" @onchange="@OnChange">

@code {
    private string _textFieldString { get; set; } = "00";

    private Register? _register;

    [Parameter]
    public Register? Value
    {
        get => _register;
        set
        {
            _register = value;
            if (value != null)
            {
                _textFieldString = value.Value;
            }
        }
    }

    [Parameter]
    public string Class { get; set; } = "";

    [Parameter]
    public EventCallback<Register?> ValueChanged { get; set; }

    private Task OnInputChange(ChangeEventArgs args)
    {
        if (args.Value != null)
        {
            _textFieldString = (string) args.Value;
        }
        return Task.CompletedTask;
    }

    private async Task OnChange(ChangeEventArgs args)
    {
        if (args.Value != null)
        {
            if (Value != null)
            {
                Value.Value = (string) args.Value;
                _textFieldString = Value.Value;
                await ValueChanged.InvokeAsync(Value);
            }
        }
    }

}